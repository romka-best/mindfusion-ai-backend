[project]
name = "mindfusion-ai-backand"
version = "1.20.10"
description = "Mindfusion Ai Backand"
readme = "README.md"

requires-python = ">=3.11"
license = { text = "Proprietary" }
dependencies = [
    "aiogram>=3.19.0",
    "aiohttp>=3.11.16",
    "aiofiles>=23.2.1",
    "anthropic>=0.49.0",
    "async-timeout>=4.0.3",
    "babel>=2.17.0",
    "cachetools>=5.5.2",
    "certifi>=2025.1.31",
    "charset-normalizer>=3.4.1",
    "filetype>=1.2.0",
    "firebase-admin>=6.7.0",
    "google-auth>=2.38.0",
    "google-api-core>=2.24.2",
    "google-cloud-bigquery>=3.31.0",
    "google-cloud-firestore>=2.20.1",
    "google-cloud-storage>=2.19.0",
    "googleapis-common-protos>=1.69.2",
    "google-generativeai>=0.8.4",
    "gcloud-aio-auth>=5.4.1",
    "gcloud-aio-storage>=9.4.0",
    "grpcio>=1.71.0",
    "httpx>=0.28.1",
    "idna>=3.10",
    "lumaai>=1.7.3",
    "pyasn1>=0.6.0",
    "pyasn1-modules>=0.4.0",
    "pycryptodome>=3.22.0",
    "PyJWT>=2.10.1",
    "pymorphy3>=2.0.3",
    "redis>=5.2.1",
    "requests>=2.32.3",
    "replicate>=1.0.4",
    "runwayml>=3.0.0",
    "six>=1.17.0",
    "stripe>=11.6.0",
    "telegramify-markdown>=0.5.1",
    "openai>=1.73.0",
    "python-dotenv>=1.0.1",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.7.1",
    "pydub>=0.25.1",
    "pytz>=2025.2",
    "uvicorn>=0.34.0",
    "fastapi>=0.115.12",
    "ffmpeg>=1.4",
    "ffprobe-python>=1.0.3",
    "yookassa>=3.5.0",
    "typing-extensions>=4.13.2"
]

[dependency-groups]
dev = [
    "deptry>=0.23.0",
    "mypy>=1.15.0",
    "pre-commit>=4.1.0",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.3",
    "pytest-mock>=3.14.0",
    "pytest-xdist>=3.6.1",
    "ruff>=0.9.6",
    "pydantic",
]



[tool.mypy]

plugins = [
    "pydantic.mypy"
]
exclude = [
    "misc"
]

[[tool.mypy.overrides]]
module = "*.*"
ignore_missing_imports = true
check_untyped_defs = true
enable_error_code = "ignore-without-code"

[tool.ruff]
extend-exclude = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.lint]
fixable = ["I", "RUF022", "RUF023", "F401", "W605"]
preview = true

select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "T20",  # flake8-print
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "B023"
]

[tool.ruff.lint.isort]
combine-as-imports = true
extra-standard-library = ["typing_extensions"]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder"
]
no-lines-before = []

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["cached_classproperty", "classproperty"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
env = []

[tool.deptry.per_rule_ignores]
DEP002 = ["async-timeout",
    "cachetools",
    "certifi",
    "charset-normalizer",
    "grpcio",
    "idna",
    "pyasn1",
    "pyasn1-modules",
    "pycryptodome",
    "PyJWT",
    "requests",
    "six",
    "python-dotenv",
    "pytz",
    "ffmpeg",
    "ffprobe-python",
    "aiofiles"
]
